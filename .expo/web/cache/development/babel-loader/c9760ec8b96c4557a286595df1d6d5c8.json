{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/khramushin/Desktop/MySibSU/screens/EventsScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { PureComponent } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport MainHeader from \"../modules/MainHeader\";\nimport { h, w } from \"../modules/constants\";\nimport MapModule from \"../modules/MapModule\";\nvar url = 'https://api.mysibsau.ru/api/event/';\nvar secondURL = 'http://185.228.233.193/api/event/';\n\nvar EventsScreen = function (_PureComponent) {\n  _inherits(EventsScreen, _PureComponent);\n\n  var _super = _createSuper(EventsScreen);\n\n  function EventsScreen() {\n    var _this;\n\n    _classCallCheck(this, EventsScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      eventList: [],\n      loading: true\n    };\n    return _this;\n  }\n\n  _createClass(EventsScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var eventApiCall, event, _eventApiCall, _event;\n\n      return _regeneratorRuntime.async(function componentDidMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(fetch(url, {\n                method: 'GET'\n              }));\n\n            case 3:\n              eventApiCall = _context.sent;\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(eventApiCall.json());\n\n            case 6:\n              event = _context.sent;\n              this.setState({\n                eventList: event.reverse(),\n                loading: false\n              });\n              _context.next = 25;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](0);\n              _context.prev = 12;\n              _context.next = 15;\n              return _regeneratorRuntime.awrap(fetch(secondURL, {\n                method: 'GET'\n              }));\n\n            case 15:\n              _eventApiCall = _context.sent;\n              _context.next = 18;\n              return _regeneratorRuntime.awrap(_eventApiCall.json());\n\n            case 18:\n              _event = _context.sent;\n              this.setState({\n                eventList: _event.reverse(),\n                loading: false\n              });\n              _context.next = 25;\n              break;\n\n            case 22:\n              _context.prev = 22;\n              _context.t1 = _context[\"catch\"](12);\n              console.log('Ошибка получения событий');\n\n            case 25:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, [[0, 10], [12, 22]], Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          eventList = _this$state.eventList,\n          loading = _this$state.loading;\n      var container = styles.container,\n          text = styles.text;\n      return React.createElement(View, {\n        style: container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }\n      }, React.createElement(MainHeader, {\n        title: 'Мои события',\n        onPress: function onPress() {\n          return _this2.props.navigation.goBack();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }\n      }), React.createElement(ScrollView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }\n      }, loading === true ? React.createElement(Text, {\n        style: text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 50\n        }\n      }, \"\\u041F\\u043E\\u0434\\u043E\\u0436\\u0434\\u0438\\u0442\\u0435, \\u0438\\u0434\\u0435\\u0442 \\u0437\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\") : eventList.map(function (item) {\n        return React.createElement(MapModule, {\n          key: item.name,\n          name: item.name,\n          inf: item.inf,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 33\n          }\n        });\n      })));\n    }\n  }]);\n\n  return EventsScreen;\n}(PureComponent);\n\nexport { EventsScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'white',\n    minHeight: h,\n    flex: 1,\n    width: w,\n    paddingBottom: 40\n  },\n  text: {\n    marginTop: 30,\n    fontSize: 20,\n    fontFamily: 'roboto',\n    color: '#006AB3'\n  }\n});","map":{"version":3,"sources":["/Users/khramushin/Desktop/MySibSU/screens/EventsScreen.js"],"names":["React","PureComponent","MainHeader","h","w","MapModule","url","secondURL","EventsScreen","state","eventList","loading","fetch","method","eventApiCall","json","event","setState","reverse","console","log","container","styles","text","props","navigation","goBack","map","item","name","inf","StyleSheet","create","alignItems","justifyContent","backgroundColor","minHeight","flex","width","paddingBottom","marginTop","fontSize","fontFamily","color"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react'\nimport { View, Text, ScrollView, StyleSheet } from 'react-native'\nimport MainHeader from '../modules/MainHeader'\nimport { h, w } from '../modules/constants'\nimport MapModule from '../modules/MapModule'\n\nconst url = 'https://api.mysibsau.ru/api/event/'\nconst secondURL = 'http://185.228.233.193/api/event/'\n\nexport default class EventsScreen extends PureComponent {\n    state = {\n        eventList: [],\n        loading: true,\n    }\n\n    async componentDidMount() {\n        try {\n            const eventApiCall = await fetch(url, {method: 'GET'});\n            const event = await eventApiCall.json();\n            this.setState({eventList: event.reverse(), loading: false});\n\n        } catch(err) {\n            try {\n                const eventApiCall = await fetch(secondURL, {method: 'GET'});\n                const event = await eventApiCall.json();\n                this.setState({eventList: event.reverse(), loading: false});\n            }\n            catch(err){\n                console.log('Ошибка получения событий')\n            }\n        }\n    }\n\n    render(){\n        const { eventList, loading} = this.state\n        const { container, text } = styles\n        return(\n            <View style={container}>\n                <MainHeader title={'Мои события'} onPress={() => this.props.navigation.goBack()}/>\n                <ScrollView>\n                        {\n                            (loading === true) ? <Text style={text}>Подождите, идет загрузка...</Text> :\n                            eventList.map(item =>           \n                                <MapModule key={item.name} name={item.name} inf={item.inf} />                              \n                            )\n                        }\n                </ScrollView>\n            </View>\n        )\n    }\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: 'white',\n        minHeight: h,\n        flex: 1,\n        width: w,\n        paddingBottom: 40\n    },\n\n    text: {\n        marginTop: 30,\n        fontSize: 20,\n        fontFamily: 'roboto',\n        color: '#006AB3'\n    }\n})\n"]},"metadata":{},"sourceType":"module"}